/* tslint:disable */
/* eslint-disable */
/**
 * SplitzBackend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GroupBalanceDto } from './GroupBalanceDto';
import {
    GroupBalanceDtoFromJSON,
    GroupBalanceDtoFromJSONTyped,
    GroupBalanceDtoToJSON,
    GroupBalanceDtoToJSONTyped,
} from './GroupBalanceDto';
import type { SplitzUserReducedDto } from './SplitzUserReducedDto';
import {
    SplitzUserReducedDtoFromJSON,
    SplitzUserReducedDtoFromJSONTyped,
    SplitzUserReducedDtoToJSON,
    SplitzUserReducedDtoToJSONTyped,
} from './SplitzUserReducedDto';

/**
 * 
 * @export
 * @interface GroupDto
 */
export interface GroupDto {
    /**
     * 
     * @type {string}
     * @memberof GroupDto
     */
    groupId: string;
    /**
     * 
     * @type {string}
     * @memberof GroupDto
     */
    name: string | null;
    /**
     * 
     * @type {string}
     * @memberof GroupDto
     */
    photo?: string | null;
    /**
     * 
     * @type {Array<SplitzUserReducedDto>}
     * @memberof GroupDto
     */
    members?: Array<SplitzUserReducedDto> | null;
    /**
     * 
     * @type {string}
     * @memberof GroupDto
     */
    membersIdHash: string | null;
    /**
     * 
     * @type {Array<GroupBalanceDto>}
     * @memberof GroupDto
     */
    balances?: Array<GroupBalanceDto> | null;
    /**
     * 
     * @type {Date}
     * @memberof GroupDto
     */
    lastActivityTime: Date;
}

/**
 * Check if a given object implements the GroupDto interface.
 */
export function instanceOfGroupDto(value: object): value is GroupDto {
    if (!('groupId' in value) || value['groupId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('membersIdHash' in value) || value['membersIdHash'] === undefined) return false;
    if (!('lastActivityTime' in value) || value['lastActivityTime'] === undefined) return false;
    return true;
}

export function GroupDtoFromJSON(json: any): GroupDto {
    return GroupDtoFromJSONTyped(json, false);
}

export function GroupDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GroupDto {
    if (json == null) {
        return json;
    }
    return {
        
        'groupId': json['groupId'],
        'name': json['name'],
        'photo': json['photo'] == null ? undefined : json['photo'],
        'members': json['members'] == null ? undefined : ((json['members'] as Array<any>).map(SplitzUserReducedDtoFromJSON)),
        'membersIdHash': json['membersIdHash'],
        'balances': json['balances'] == null ? undefined : ((json['balances'] as Array<any>).map(GroupBalanceDtoFromJSON)),
        'lastActivityTime': (new Date(json['lastActivityTime'])),
    };
}

export function GroupDtoToJSON(json: any): GroupDto {
    return GroupDtoToJSONTyped(json, false);
}

export function GroupDtoToJSONTyped(value?: GroupDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'groupId': value['groupId'],
        'name': value['name'],
        'photo': value['photo'],
        'members': value['members'] == null ? undefined : ((value['members'] as Array<any>).map(SplitzUserReducedDtoToJSON)),
        'membersIdHash': value['membersIdHash'],
        'balances': value['balances'] == null ? undefined : ((value['balances'] as Array<any>).map(GroupBalanceDtoToJSON)),
        'lastActivityTime': ((value['lastActivityTime']).toISOString()),
    };
}

