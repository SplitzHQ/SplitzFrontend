/* tslint:disable */
/* eslint-disable */
/**
 * SplitzBackend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { mapValues } from '../runtime'
import type { Tag } from './Tag'
import { TagFromJSON, TagFromJSONTyped, TagToJSON, TagToJSONTyped } from './Tag'
import type { TransactionBalanceDto } from './TransactionBalanceDto'
import {
  TransactionBalanceDtoFromJSON,
  TransactionBalanceDtoFromJSONTyped,
  TransactionBalanceDtoToJSON,
  TransactionBalanceDtoToJSONTyped
} from './TransactionBalanceDto'

/**
 *
 * @export
 * @interface TransactionDto
 */
export interface TransactionDto {
  /**
   *
   * @type {string}
   * @memberof TransactionDto
   */
  transactionId?: string
  /**
   *
   * @type {string}
   * @memberof TransactionDto
   */
  groupId: string
  /**
   *
   * @type {string}
   * @memberof TransactionDto
   */
  name: string
  /**
   *
   * @type {string}
   * @memberof TransactionDto
   */
  icon: string
  /**
   *
   * @type {Date}
   * @memberof TransactionDto
   */
  createTime: Date
  /**
   *
   * @type {Date}
   * @memberof TransactionDto
   */
  transactionTime: Date
  /**
   *
   * @type {number}
   * @memberof TransactionDto
   */
  amount: number
  /**
   *
   * @type {string}
   * @memberof TransactionDto
   */
  currency: string
  /**
   *
   * @type {Array<Tag>}
   * @memberof TransactionDto
   */
  tags: Array<Tag>
  /**
   *
   * @type {string}
   * @memberof TransactionDto
   */
  geoCoordinate?: string | null
  /**
   *
   * @type {string}
   * @memberof TransactionDto
   */
  photo?: string | null
  /**
   *
   * @type {Array<TransactionBalanceDto>}
   * @memberof TransactionDto
   */
  balances?: Array<TransactionBalanceDto>
}

/**
 * Check if a given object implements the TransactionDto interface.
 */
export function instanceOfTransactionDto(value: object): value is TransactionDto {
  if (!('groupId' in value) || value['groupId'] === undefined) return false
  if (!('name' in value) || value['name'] === undefined) return false
  if (!('icon' in value) || value['icon'] === undefined) return false
  if (!('createTime' in value) || value['createTime'] === undefined) return false
  if (!('transactionTime' in value) || value['transactionTime'] === undefined) return false
  if (!('amount' in value) || value['amount'] === undefined) return false
  if (!('currency' in value) || value['currency'] === undefined) return false
  if (!('tags' in value) || value['tags'] === undefined) return false
  return true
}

export function TransactionDtoFromJSON(json: any): TransactionDto {
  return TransactionDtoFromJSONTyped(json, false)
}

export function TransactionDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionDto {
  if (json == null) {
    return json
  }
  return {
    transactionId: json['transactionId'] == null ? undefined : json['transactionId'],
    groupId: json['groupId'],
    name: json['name'],
    icon: json['icon'],
    createTime: new Date(json['createTime']),
    transactionTime: new Date(json['transactionTime']),
    amount: json['amount'],
    currency: json['currency'],
    tags: (json['tags'] as Array<any>).map(TagFromJSON),
    geoCoordinate: json['geoCoordinate'] == null ? undefined : json['geoCoordinate'],
    photo: json['photo'] == null ? undefined : json['photo'],
    balances: json['balances'] == null ? undefined : (json['balances'] as Array<any>).map(TransactionBalanceDtoFromJSON)
  }
}

export function TransactionDtoToJSON(json: any): TransactionDto {
  return TransactionDtoToJSONTyped(json, false)
}

export function TransactionDtoToJSONTyped(value?: TransactionDto | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value
  }

  return {
    transactionId: value['transactionId'],
    groupId: value['groupId'],
    name: value['name'],
    icon: value['icon'],
    createTime: value['createTime'].toISOString(),
    transactionTime: value['transactionTime'].toISOString(),
    amount: value['amount'],
    currency: value['currency'],
    tags: (value['tags'] as Array<any>).map(TagToJSON),
    geoCoordinate: value['geoCoordinate'],
    photo: value['photo'],
    balances: value['balances'] == null ? undefined : (value['balances'] as Array<any>).map(TransactionBalanceDtoToJSON)
  }
}
