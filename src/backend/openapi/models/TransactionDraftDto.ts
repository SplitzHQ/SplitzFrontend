/* tslint:disable */
/* eslint-disable */
/**
 * SplitzBackend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TransactionDraftBalanceDto } from './TransactionDraftBalanceDto';
import {
    TransactionDraftBalanceDtoFromJSON,
    TransactionDraftBalanceDtoFromJSONTyped,
    TransactionDraftBalanceDtoToJSON,
    TransactionDraftBalanceDtoToJSONTyped,
} from './TransactionDraftBalanceDto';
import type { Tag } from './Tag';
import {
    TagFromJSON,
    TagFromJSONTyped,
    TagToJSON,
    TagToJSONTyped,
} from './Tag';

/**
 * 
 * @export
 * @interface TransactionDraftDto
 */
export interface TransactionDraftDto {
    /**
     * 
     * @type {string}
     * @memberof TransactionDraftDto
     */
    transactionDraftId?: string;
    /**
     * 
     * @type {string}
     * @memberof TransactionDraftDto
     */
    userId: string;
    /**
     * 
     * @type {string}
     * @memberof TransactionDraftDto
     */
    groupId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof TransactionDraftDto
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof TransactionDraftDto
     */
    icon?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof TransactionDraftDto
     */
    createTime?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof TransactionDraftDto
     */
    transactionTime?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof TransactionDraftDto
     */
    amount?: number | null;
    /**
     * 
     * @type {string}
     * @memberof TransactionDraftDto
     */
    currency?: string | null;
    /**
     * 
     * @type {Array<Tag>}
     * @memberof TransactionDraftDto
     */
    tags?: Array<Tag>;
    /**
     * 
     * @type {string}
     * @memberof TransactionDraftDto
     */
    geoCoordinate?: string | null;
    /**
     * 
     * @type {string}
     * @memberof TransactionDraftDto
     */
    photo?: string | null;
    /**
     * 
     * @type {Array<TransactionDraftBalanceDto>}
     * @memberof TransactionDraftDto
     */
    balances?: Array<TransactionDraftBalanceDto>;
}

/**
 * Check if a given object implements the TransactionDraftDto interface.
 */
export function instanceOfTransactionDraftDto(value: object): value is TransactionDraftDto {
    if (!('userId' in value) || value['userId'] === undefined) return false;
    return true;
}

export function TransactionDraftDtoFromJSON(json: any): TransactionDraftDto {
    return TransactionDraftDtoFromJSONTyped(json, false);
}

export function TransactionDraftDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionDraftDto {
    if (json == null) {
        return json;
    }
    return {
        
        'transactionDraftId': json['transactionDraftId'] == null ? undefined : json['transactionDraftId'],
        'userId': json['userId'],
        'groupId': json['groupId'] == null ? undefined : json['groupId'],
        'name': json['name'] == null ? undefined : json['name'],
        'icon': json['icon'] == null ? undefined : json['icon'],
        'createTime': json['createTime'] == null ? undefined : (new Date(json['createTime'])),
        'transactionTime': json['transactionTime'] == null ? undefined : (new Date(json['transactionTime'])),
        'amount': json['amount'] == null ? undefined : json['amount'],
        'currency': json['currency'] == null ? undefined : json['currency'],
        'tags': json['tags'] == null ? undefined : ((json['tags'] as Array<any>).map(TagFromJSON)),
        'geoCoordinate': json['geoCoordinate'] == null ? undefined : json['geoCoordinate'],
        'photo': json['photo'] == null ? undefined : json['photo'],
        'balances': json['balances'] == null ? undefined : ((json['balances'] as Array<any>).map(TransactionDraftBalanceDtoFromJSON)),
    };
}

export function TransactionDraftDtoToJSON(json: any): TransactionDraftDto {
    return TransactionDraftDtoToJSONTyped(json, false);
}

export function TransactionDraftDtoToJSONTyped(value?: TransactionDraftDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'transactionDraftId': value['transactionDraftId'],
        'userId': value['userId'],
        'groupId': value['groupId'],
        'name': value['name'],
        'icon': value['icon'],
        'createTime': value['createTime'] == null ? undefined : ((value['createTime'] as any).toISOString()),
        'transactionTime': value['transactionTime'] == null ? undefined : ((value['transactionTime'] as any).toISOString()),
        'amount': value['amount'],
        'currency': value['currency'],
        'tags': value['tags'] == null ? undefined : ((value['tags'] as Array<any>).map(TagToJSON)),
        'geoCoordinate': value['geoCoordinate'],
        'photo': value['photo'],
        'balances': value['balances'] == null ? undefined : ((value['balances'] as Array<any>).map(TransactionDraftBalanceDtoToJSON)),
    };
}

