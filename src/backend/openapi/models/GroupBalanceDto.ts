/* tslint:disable */
/* eslint-disable */
/**
 * SplitzBackend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { mapValues } from '../runtime'
import type { SplitzUserReducedDto } from './SplitzUserReducedDto'
import {
  SplitzUserReducedDtoFromJSON,
  SplitzUserReducedDtoFromJSONTyped,
  SplitzUserReducedDtoToJSON,
  SplitzUserReducedDtoToJSONTyped
} from './SplitzUserReducedDto'

/**
 *
 * @export
 * @interface GroupBalanceDto
 */
export interface GroupBalanceDto {
  /**
   *
   * @type {string}
   * @memberof GroupBalanceDto
   */
  groupId: string
  /**
   *
   * @type {SplitzUserReducedDto}
   * @memberof GroupBalanceDto
   */
  user: SplitzUserReducedDto
  /**
   *
   * @type {SplitzUserReducedDto}
   * @memberof GroupBalanceDto
   */
  friendUser: SplitzUserReducedDto
  /**
   *
   * @type {number}
   * @memberof GroupBalanceDto
   */
  balance: number
  /**
   *
   * @type {string}
   * @memberof GroupBalanceDto
   */
  currency: string
}

/**
 * Check if a given object implements the GroupBalanceDto interface.
 */
export function instanceOfGroupBalanceDto(value: object): value is GroupBalanceDto {
  if (!('groupId' in value) || value['groupId'] === undefined) return false
  if (!('user' in value) || value['user'] === undefined) return false
  if (!('friendUser' in value) || value['friendUser'] === undefined) return false
  if (!('balance' in value) || value['balance'] === undefined) return false
  if (!('currency' in value) || value['currency'] === undefined) return false
  return true
}

export function GroupBalanceDtoFromJSON(json: any): GroupBalanceDto {
  return GroupBalanceDtoFromJSONTyped(json, false)
}

export function GroupBalanceDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GroupBalanceDto {
  if (json == null) {
    return json
  }
  return {
    groupId: json['groupId'],
    user: SplitzUserReducedDtoFromJSON(json['user']),
    friendUser: SplitzUserReducedDtoFromJSON(json['friendUser']),
    balance: json['balance'],
    currency: json['currency']
  }
}

export function GroupBalanceDtoToJSON(json: any): GroupBalanceDto {
  return GroupBalanceDtoToJSONTyped(json, false)
}

export function GroupBalanceDtoToJSONTyped(value?: GroupBalanceDto | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value
  }

  return {
    groupId: value['groupId'],
    user: SplitzUserReducedDtoToJSON(value['user']),
    friendUser: SplitzUserReducedDtoToJSON(value['friendUser']),
    balance: value['balance'],
    currency: value['currency']
  }
}
