/* tslint:disable */
/* eslint-disable */
/**
 * SplitzBackend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { mapValues } from '../runtime'
import type { SplitzUserReducedDto } from './SplitzUserReducedDto'
import {
  SplitzUserReducedDtoFromJSON,
  SplitzUserReducedDtoFromJSONTyped,
  SplitzUserReducedDtoToJSON,
  SplitzUserReducedDtoToJSONTyped
} from './SplitzUserReducedDto'

/**
 *
 * @export
 * @interface TransactionBalanceDto
 */
export interface TransactionBalanceDto {
  /**
   *
   * @type {string}
   * @memberof TransactionBalanceDto
   */
  transactionId?: string
  /**
   *
   * @type {string}
   * @memberof TransactionBalanceDto
   */
  userId: string
  /**
   *
   * @type {number}
   * @memberof TransactionBalanceDto
   */
  balance?: number
  /**
   *
   * @type {SplitzUserReducedDto}
   * @memberof TransactionBalanceDto
   */
  user: SplitzUserReducedDto
}

/**
 * Check if a given object implements the TransactionBalanceDto interface.
 */
export function instanceOfTransactionBalanceDto(value: object): value is TransactionBalanceDto {
  if (!('userId' in value) || value['userId'] === undefined) return false
  if (!('user' in value) || value['user'] === undefined) return false
  return true
}

export function TransactionBalanceDtoFromJSON(json: any): TransactionBalanceDto {
  return TransactionBalanceDtoFromJSONTyped(json, false)
}

export function TransactionBalanceDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionBalanceDto {
  if (json == null) {
    return json
  }
  return {
    transactionId: json['transactionId'] == null ? undefined : json['transactionId'],
    userId: json['userId'],
    balance: json['balance'] == null ? undefined : json['balance'],
    user: SplitzUserReducedDtoFromJSON(json['user'])
  }
}

export function TransactionBalanceDtoToJSON(json: any): TransactionBalanceDto {
  return TransactionBalanceDtoToJSONTyped(json, false)
}

export function TransactionBalanceDtoToJSONTyped(
  value?: TransactionBalanceDto | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value
  }

  return {
    transactionId: value['transactionId'],
    userId: value['userId'],
    balance: value['balance'],
    user: SplitzUserReducedDtoToJSON(value['user'])
  }
}
