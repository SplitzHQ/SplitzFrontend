/* tslint:disable */
/* eslint-disable */
/**
 * SplitzBackend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SplitzUserReducedDto } from './SplitzUserReducedDto';
import {
    SplitzUserReducedDtoFromJSON,
    SplitzUserReducedDtoFromJSONTyped,
    SplitzUserReducedDtoToJSON,
    SplitzUserReducedDtoToJSONTyped,
} from './SplitzUserReducedDto';

/**
 * 
 * @export
 * @interface FriendDto
 */
export interface FriendDto {
    /**
     * 
     * @type {SplitzUserReducedDto}
     * @memberof FriendDto
     */
    friendUser: SplitzUserReducedDto;
    /**
     * 
     * @type {string}
     * @memberof FriendDto
     */
    remark?: string | null;
}

/**
 * Check if a given object implements the FriendDto interface.
 */
export function instanceOfFriendDto(value: object): value is FriendDto {
    if (!('friendUser' in value) || value['friendUser'] === undefined) return false;
    return true;
}

export function FriendDtoFromJSON(json: any): FriendDto {
    return FriendDtoFromJSONTyped(json, false);
}

export function FriendDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): FriendDto {
    if (json == null) {
        return json;
    }
    return {
        
        'friendUser': SplitzUserReducedDtoFromJSON(json['friendUser']),
        'remark': json['remark'] == null ? undefined : json['remark'],
    };
}

export function FriendDtoToJSON(json: any): FriendDto {
    return FriendDtoToJSONTyped(json, false);
}

export function FriendDtoToJSONTyped(value?: FriendDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'friendUser': SplitzUserReducedDtoToJSON(value['friendUser']),
        'remark': value['remark'],
    };
}

